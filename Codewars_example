// 28.11.2023
// first task
  function points(games) {
    let sum=0;
    for (let i=0; i<games.length; ++i)
      {
      if (games[i][0]>games[i][2])
        sum+=3;
      if (games[i][0]==games[i][2])
        sum+=1;
      }
    return sum;
  }

// create your first JS function and print "Hello World!"
  function helloWorld () {
  var str="Hello World!!";
  console.log(str);
  }

// 29.11.2023
//  Basic data types-Number
  let v1 = 50,
      v2 = 100,
      v3 = 150,
      v4 = 200,
      v5 = 2,
      v6 = 250;
  function equal1(){
    let a = v1,   
        b = v1;   
    return a + b;
}
// Please refer to the example above to complete the following functions
  function equal2(){
  let a =  v3, //set number value to a
      b =  v1; //set number value to b
  return a - b;
  }
function equal3(){
  let a =  v1, //set number value to a
      b =  v5; //set number value to b
  return a * b;
}
function equal4(){
  let a =  v4, //set number value to a
      b =  v5; //set number value to b
  return a / b;
}
function equal5(){
  let a =  v2, //set number value to a
  b = v4; //set number value to b
  return a % b;

// Basic data types-String
  var a1="A",a2="a",b1="B",b2="b",c1="C",c2="c",d1="D",d2="d",e1="E",e2="e",n1="N",n2="n"
  function Dad(){
  //select some variable to combine "Dad"
  return d1+a2+d2;
}
function Bee(){
  //select some variable to combine "Bee"
  return b1+e2+e2;
}
function banana(){
  //select some variable to combine "banana"
  return b2+a2+n2+a2+n2+a2;
}
//answer some questions if you finished works above
  function answer1(){
  //the answer should be "yes" or "no"
    return "no";
  }
  function answer2(){
  //the answer should be "yes" or "no"
    return "no";
  }
  function answer3(){
  //the answer should be "yes" or "no"
    return "yes";
  }

// 30.11.2023
// Basic data types--Array
  function getLength(arr){
//return length of arr
  return arr.length
}
function getFirst(arr){
  //return the first element of arr
  return arr[0]
}
function getLast(arr){
  //return the last element of arr
  return arr [arr.length-1]
}
function pushElement(arr){
  var el=1;
  //push el to arr
  arr.push (el);
  return arr
}
function popElement(arr){
  //pop an element from arr
  arr.pop ();
  return arr
}

// Basic data types--Object
  function animal(obj){
      
    return "This "+ obj.color + " " + obj.name + " has " + obj.legs + " legs."
  } // or obj={name:"dog",legs:4,color:"white"} 

// 01.12.2023
// if..else and ternary operator
function saleHotdogs(n){
  if (n < 5) return (n * 100);
  else if ( n >= 5 && n < 10) return (n * 95);
  else return (n * 90);
  }

// Conditional statement--switch
  function howManydays(month){
    var days;
    switch (month){
    case 2:
        days = 28;
        break;
    case 4:
        days = 30;
        break;
         case 6:
        days = 30;
        break;
         case 9:
        days = 30;
        break;
         case 11:
        days = 30;
        break;
        
    default:
        days = 31;
    }
    return days;
  }

//  loop statement -while and do..while
  function padIt(str,n){
  var num=1;
  while(num<=n){
    if(num%2){
      str ='*'+ str;
    }else{
      str = str + '*';
    }
    num++;
  }
  return str;
  }

// 02.12.2023
//  loop statement --for
  function pickIt(arr){
    var odd=[],even=[];
      for (let i = 0; i < arr.length; i++) {
      if (arr[i] % 2 !== 0) {
        odd.push(arr[i]);
      } else {
        even.push(arr[i]);
      }
    }
      return [odd,even];
  }

// loop statement --break,continue
  function grabDoll(dolls){
    var bag=[];
    //coding here
    for (let i = 0; i < dolls.length; i++) {
     if(bag.length === 3)  {
        break;
      }
      else if (dolls[i] == 'Hello Kitty' || dolls[i] == 'Barbie doll') {
        bag.push(dolls[i])  
        continue;
      } 
    }
    return bag;
  }

// 03.12.2023
// loop statement --for..in and for..of
  function giveMeFive(obj){
  var five=[];
  for (var key in obj) {
  if (key.length == 5) five.push(key);
  if (obj[key]. length == 5) five.push(obj[key]);
  }
  return five;
    }

// Number object and its properties
  function whatNumberIsIt(n){
  switch (true) {
  case (n == Number.MAX_VALUE): return "Input number is Number.MAX_VALUE";
  case (n == Number.POSITIVE_INFINITY): return "Input number is Number.POSITIVE_INFINITY";
  case (n == Number.MIN_VALUE): return "Input number is Number.MIN_VALUE";
  case (n == Number.NEGATIVE_INFINITY): return "Input number is Number.NEGATIVE_INFINITY";
  case (isNaN(n)): return "Input number is Number.NaN";
  default: return "Input number is " + n;
    }
  }

// Methods of Number object--toString() and toLocaleString()
  function colorOf(r,g, b){
  return "#" + toHex(r)+ toHex(g)+ toHex(b);
  }
  function toHex(n){
  var result = n.toString(16);
  return result.length == 1 ? "0" + result : result;
  }

// 04.12.2023
// Chuck Norris VII - True or False?
function ifChuckSaysSo(){
return !true;
}

// Friend or Foe?
  function friend(friends){
    return friends.filter(el => el.length === 4);
  }

// Grasshopper - Summation
function summation(num) {
  let sum = 0
  for (i = num; i >= 1 ; i--){
    sum += i
  }
  return sum
}

// Remove First and Last Character
  function removeChar(str){
   //You got this!
    let newStr = ""
    for(i = 0 ; i < str.length ; i++){
      if(i == 0){
        newStr += ""
      }else if(i > 0 && i < (str.length-1)){
        newStr += str[i]
      }else if (i == str.length){
        newStr += ""
      }
    }
    return newStr
  };

// Remove String Spaces
function noSpace(x){
  return x.replace(/\s/g, '');
}

// 05.12.2023
// Opposites Attract
  function lovefunc(flower1, flower2){
   if (flower1 % 2 === 0 && flower2 % 2 === 1 || flower1 % 2 === 1 && flower2 % 2 === 0) {
      return true;
    } else {
      return false;
    }
  }

// Beginner Series #2 Clock
function past(h, m, s){
  const convertHours = h * 60 * 60 * 1000;
  const convertMinutes = m * 60 * 1000;
  const convertSeconds = s * 1000;
return convertHours + convertMinutes + convertSeconds;
}

// Get the Middle Character
function getMiddle(s)
{
  let evenOdd = s.length % 2 === 0
  let minMid = s.charAt(s.length/2-1)
  let mid = s.charAt(s.length/2)
  
  return (evenOdd == true)? minMid.concat(mid): mid
}

// 06.12.2023
// String repeat
  function repeatStr (n, s) {
  if (n > 0) {    
    return s.repeat(n);
} 
  else {
    return "";
  }
 }

// Categorize New Member
    function openOrSenior(data){
    function determineMembership(member){
    return (member[0] >= 55 && member[1] > 7) ? 'Senior' : 'Open';
  }
  return data.map(determineMembership);
}

// 07.12.2023
// A Needle in the Haystack
  function findNeedle(haystack) {
  let newStr = haystack.indexOf("needle");
  return "found the needle at position " + newStr;
  }

// Opposite number
  function opposite(number) {
  return(-number);
}

// Abbreviate a Two Word Name
  function abbrevName(name){
  var nameArray = name.split(" ");
  return (nameArray[0][0] + "." + nameArray[1][0]).toUpperCase();
}

// 08.12.2023
// Reversed Strings
  function solution(str){
 let array = str.split("");
    array.reverse()
        return array.join("") 
}

// Count of positives / sum of negatives
  function countPositivesSumNegatives(input) {
 let positiveNums = 0;
    let negativeNums = 0;
    if (input === null || input.length === 0) {
      return [];
    } else {
      input.forEach((num) => num > 0 ? positiveNums++ : negativeNums += num);
    }
    return [positiveNums , negativeNums];
}

// MakeUpperCase
  function makeUpperCase(str) {
let Str = '';
let newStr = str.toUpperCase() 
   return newStr 
}

// String ends with?
  function solution(str, ending){
  return str.indexOf(ending, str.length - ending.length) !== -1;
  }

// Convert boolean values to strings 'Yes' or 'No'.
  function boolToWord( bool ){
  if (bool == true) {
    return 'Yes'
  } else {
    return 'No'
  }
}

// 09.12.2023
// Number of People in the Bus
  var number = function(busStops){
    var upSum=0;
     var downSum=0;
    for(var i=0; i<busStops.length; i++){
      upSum+=busStops[i][0];
       downSum+=busStops[i][1];
    }   
  var last=upSum-downSum;
   return last;
}

// Ones and Zeros
  const binaryArrayToNumber = arr => {
  return Number.parseInt(arr.join(""), 2);
};

// Fake Binary
  function fakeBin(x){
      let myArray = x.split("");
    let newString = new String;
    for (let i = 0; i < myArray.length; i++){
      if(myArray[i]>=5){
        newString+="1";
      } else {
        newString+="0";
      }
    }
    return newString;
}

// 10.12.2023
// Century From Year
  function century(year) {
   return Math.floor(year/100) + ((year%100) ? 1 : 0)
   return;
}

// 11.12.2023
// Reverse words
  function reverseWords(str) {
  str = str.split(' ');
  str = str.map(x => x.split('').reverse());
  str = str.map(x => x.join(''));
  return str.join(' ');
}

// Highest and Lowest
  function highAndLow(numbers){
  const arr = numbers.split(' ').map(Number);
  let highest = arr[0];
  let lowest = arr[0];
  for (let i = 1; i < arr.length; i++) {
    if (arr[i] > highest) highest = arr[i];
    if (arr[i] < lowest) lowest = arr[i];
  }
  return highest + ' ' + lowest;
}


// 12.12.2023
// Convert a Number to a String!
  function numberToString(num) {
  return String(num);
}

// Even or Odd
  function evenOrOdd(number) {
  if(number % 2 === 0) {
      return 'Even';
    } else {
      return 'Odd';
    }
}

// Sentence Smash
  function smash (words) {
  if (words.length===0){
    return ""
  } else {
    return words.join(" ")
  }
};

// 13.12.2023
// Descending Order
  function descendingOrder(n){
   var m = n.toString().split('');
if(m.length === 1) {return n};
return +m.sort().reverse().join('');
}

// 14.12.2023
// Convert number to reversed array of digits
  function digitize(n) {
let str = n.toString();
  let arr = [];
  for (let i = 0; i < str.length; i++) {
    arr.push(Number(str[i]))
  }
  return arr.reverse()
}

// 15.12.2023
// function isTriangle(a,b,c)
{
   if (a + b <= c || a + c <= b || b + c <= a)  
        return false;  
    else
        return true;  
}

// 16.12.2023
// Basic Mathematical Operations
  function basicOp(operation, value1, value2) {
  if (operation == '+'){
   return  value1 + value2;
  } else if (operation == '-') {
   return value1 - value2;
  } else if (operation == '*') {
   return value1 * value2;
  } else {
   return value1 / value2;
  }
}

// 17.12.2023
// Calculate average
  function findAverage(array) {
  if (array == 0) {
    return 0;
  } else {
    let arr = 0;
  for (let i = 0; i < array.length; i++) {
    arr += array[i];
  }
    return arr / array.length
  }
}

// 18.12.2023
// Count by X
  function countBy(x, n) {
    let z = [];
  let arr = Array(n).fill().map((e, i) => i + 1)
  z = arr.map((el) => el*x)
    return z;
  }

// 19.12.2023
// Convert a Boolean to a String
  function booleanToString(b){ 
  return (b == true) ? "true" : "false"; 
}

// Beginner Series #1 School Paperwork
  function paperwork(n, m) {
  return n < 0 || m < 0 ? 0 : n*m;
}

// Beginner - Reduce but Grow
  function grow(x){
  let arr = 1;
  for (let i = 0; i < x.length; i++) {
    arr *= x[i];
  }
    return arr
}

// 20.12.2023
// Grasshopper - Personalized Message
  function greet (name, owner) {
  return name === owner ? 'Hello boss' : 	'Hello guest';
}

// Find Maximum and Minimum Values of a List
  var min = function(list){
    return Math.min.apply(null,list);
}
var max = function(list){
    return Math.max.apply(null,list);
}

// Keep Hydrated!!!
  function litres(time) {
  return Math.floor (time*0.5);
}

// 21.12.2023
// If you can't sleep, just count sheep
  var countSheep = function (num){
  let result = "";
  for (let i = 1; i <= num; i++) {
        result += `${i} sheep...`;
  }
  return result;
}

// 16.02.2024
// Function 1 - hello world
  function greet () {
  x = "hello world!";
  return x;
  }

// Third Angle of a Triangle
  function otherAngle(a, b) {
  let c = 180-a-b
  return c;
}

// Quarter of the year
  const quarterOf = (month) => {
  let x = Math.ceil (month/3)
  return x
}
